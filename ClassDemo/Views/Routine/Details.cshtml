@model Assignment3.Models.Routine

@{
    ViewData["Title"] = "Routine Details";
}

@if (ViewData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @ViewData["ErrorMessage"]
    </div>
}
@if (ViewData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @ViewData["SuccessMessage"]
    </div>
}

<link rel="stylesheet" href="~/css/site.css" />
<h1>@Model.RoutineType Routine Details</h1>

<div class="card mb-4">
    <div class="card-header">
        <h4>@Model.RoutineType for @Model.DayOfWeek</h4>
        <p class="mb-0"><strong>Person:</strong> @(Model.Person?.Name ?? "N/A")</p>
    </div>
    <div class="card-body">
        <h5 class="card-title">Exercises</h5>
        @if (Model.Exercises != null && Model.Exercises.Any())
        {
            <ul class="list-group list-group-flush">
                @foreach (var exercise in Model.Exercises)
                {
                    <li class="list-group-item">
                        <div class="row">
                            <div class="col-md-8">
                                <h6 class="mb-1">@exercise.Name</h6>
                                <p class="mb-1 text-muted">@exercise.Description</p>
                                <small>@exercise.Sets sets of @exercise.Reps reps</small>
                            </div>
                            <div class="col-md-4 text-end">
                                <a asp-action="EditExercise" asp-route-id="@exercise.Id" class="btn btn-sm btn-outline-warning">Edit</a>
                                <form asp-action="DeleteExercise" asp-route-id="@exercise.Id" method="post" class="d-inline" ;">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
                                </form>
                            </div>
                        </div>
                    </li>
                }
            </ul>
        }
        else
        {
            <p class="text-muted" id="no-exercises">No exercises assigned to this routine.</p>
        }
    </div>
</div>

<div class="d-flex flex-wrap gap-2 mt-3">
    <a asp-action="CreateExercise" asp-route-routineId="@Model.Id" class="btn btn-primary">Create Exercise</a>
    <a asp-controller="Person" asp-action="Details" class="btn btn-secondary">Back to List</a>
    <form asp-action="RegenerateRoutine" asp-route-id="@Model.Id" method="post" class="d-inline-block">
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-warning";">
            Regenerate Routine
        </button>
    </form>
    <form asp-action="Delete" asp-route-id="@Model.Id" method="post" class="d-inline">
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this routine?');">
            Delete Routine
        </button>
    </form>
</div>

@* Script to make exercises autogenerate if there are none in the set *@
@section Scripts {
    <script>
        // Automatically regenerate routine if no exercises exist
        window.onload = function () {
            const noExercisesElement = document.getElementById('no-exercises');
            if (noExercisesElement) {
                fetch('@Url.Action("RegenerateRoutine", "Routine", new { id = Model.Id })', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                .then(response => {
                    if (response.ok) {
                        location.reload(); // Reload the page to display newly generated exercises
                    } else {
                        console.error('Failed to regenerate routine.');
                    }
                });
            }
        };
    </script>
} 
