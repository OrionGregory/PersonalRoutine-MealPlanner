@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model Assignment3.Models.Person

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center bg-dark">
    <h1 class="display-8" style="color:ghostwhite;">Welcome  @Html.DisplayFor(model => model.Name) to Your Wellness Dashboard!</h1>
    <p class="lead" style="color:ghostwhite;">Achieve your fitness goals with a personalized workout plan.</p>
</div>

@if (SignInManager.IsSignedIn(User))
{
    <div class="text-center" style="background-color:white;">
        <!--Section Header -->
        <div style="background-color:slategrey;">
            <h2 style="color:white">Your Goal Progress</h2>
        </div>
        <!-- Weight Progress Section -->
        <div class="row justify-content-left mb-4">
            <div class="col-md-6">
                <div class="table mt-4">
                    <table class="table table-striped table-bordered table-hover">
                        <thead class="thead-light">
                            <tr>
                                <th>Goal Weight</th>
                                <th>Current Weight</th>
                            </tr>
                        </thead>
                        <tbody class="tbody-light">
                            <tr>
                                <td>@Html.DisplayFor(model => model.GoalWeight) lbs</td>
                                <td>@Html.DisplayFor(model => model.Weight) lbs</td>
                            </tr>
                            <tr>
                                @if (Math.Abs((decimal)(Model.Weight.GetValueOrDefault() - Model.GoalWeight.GetValueOrDefault())) <= 5)
                                {
                                    <td style="background-color: palegreen" colspan="2">
                                        <span style="color: darkgreen;">GOAL ACHIEVED!</span>
                                    </td>
                                }
                                else
                                {
                                    <td style="background-color: palevioletred" colspan="2">
                                        <span style="color: darkred;">@Math.Abs((decimal)(Model.Weight.GetValueOrDefault() - Model.GoalWeight.GetValueOrDefault())) lbs to go</span>
                                    </td>
                                }
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="card mt-4">
                    <div class="card-header">
                        <h4>Weigh In</h4>
                    </div>
                    <div class="card-body">
                        <form asp-controller="Person" asp-action="UpdateWeight" method="post" class="form-inline justify-content-center">
                            <input type="hidden" asp-for="Id" />
                            <div class="form-group mx-2">
                                <label class="mr-2">New Weight (lbs):</label>
                                <input type="number" name="newWeight" class="form-control" step="0.1" required />


                            </div>
                            <button type="submit" class="btn btn-primary">Update Weight</button>
                            <a asp-controller="Person" asp-action="EditWeightHistory" asp-route-id="@Model.Id" class="btn btn-primary">Edit History</a>
                        </form>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="justify-content-right">
                    <div class="card mt-4">
                        <div class="card-header">
                            <h4>Weight History</h4>
                        </div>
                        <div class="card-body">
                            <canvas id="weightChart" width="400" height="200"></canvas>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Chart -->

        </div>
        <div style="background-color:slategrey;">
            <h2 style="color:white">Today's Workouts</h2>
        </div>
        <div class="row mb-4">
            <!-- Today's Workouts Section -->
            <div class="col-md-12">
                <div class="card mt-4">
                    <div class="card-header">
                        <h4>@DateTime.Now.ToString("dddd")</h4>
                    </div>
                    <div class="card-body">
                        @if (Model.Routines != null && Model.Routines.Any(r => r.DayOfWeek == DateTime.Now.ToString("dddd")))
                        {
                            var todaysRoutines = Model.Routines.Where(r => r.DayOfWeek == DateTime.Now.ToString("dddd"));

                            @foreach (var routine in todaysRoutines)
                            {
                                <h5>@routine.RoutineType</h5>
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Exercise</th>
                                            <th>Sets</th>
                                            <th>Reps</th>
                                            <th>Status</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var exercise in routine.Exercises ?? Enumerable.Empty<Exercise>())
                                        {
                                            <tr id="exercise-@exercise.Id" class="exercise-row @(ViewBag.CompletedExercises?.Contains(exercise.Id) == true ? "bg-success text-white" : "")" onclick="toggleExerciseCompletionRow(this)">
                                                <td>@exercise.Name</td>
                                                <td>@exercise.Sets</td>
                                                <td>@exercise.Reps</td>
                                                <td>
                                                    <div class="custom-control custom-checkbox">
                                                        <input type="checkbox"
                                                               class="custom-control-input exercise-checkbox"
                                                               id="check-@exercise.Id"
                                                               data-exercise-id="@exercise.Id"
                                                        @(ViewBag.CompletedExercises?.Contains(exercise.Id) == true ? "checked" : "")
                                                               onchange="toggleExerciseCompletion(this)" />
                                                        <label class="custom-control-label" for="check-@exercise.Id">
                                                            Complete
                                                        </label>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                        }
                        else
                        {

                            <td style="background-color: palevioletred" colspan="2">
                                <span style="color: darkred;">@decimal.Abs((decimal)(Model.Weight.GetValueOrDefault() - Model.GoalWeight.GetValueOrDefault())) lbs to go</span> <!-- Red if the goal is not reached -->
                            </td>
                            <p class="text-muted">No workouts scheduled for today.</p>
                        }
                    </div>
                </div>
            </div>

        </div>

        <p>
            <a asp-controller="Person" asp-action="Details" class="btn btn-primary">Profile and Workout Plan</a>
            <a asp-controller="Person" asp-action="Edit" class="btn btn-primary">Edit Goal or Profile</a>
            @if (@Model.isAdmin == true)
            {
                <a asp-controller="Person" asp-action="AdminMenu" class="btn btn-primary"> Admin Menu</a>
            }
        </p>
    </div>
}
else
{
    <div class="mt-5">
        <h2>Get Started</h2>
        <p>
            <a asp-area="Identity" asp-page="/Account/Login" class="btn btn-primary">Log In</a>
            or
            <a asp-area="Identity" asp-page="/Account/Register" class="btn btn-secondary">Register</a>
        </p>
    </div>
}

@section Scripts {
    <script>
        function toggleExerciseCompletion(checkbox) {
            const exerciseId = checkbox.dataset.exerciseId;
            const row = document.getElementById(`exercise-${exerciseId}`);

            fetch('/Person/ToggleExerciseCompletion', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({
                    exerciseId: exerciseId,
                    completed: checkbox.checked
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    if (checkbox.checked) {
                        row.classList.add('bg-success', 'text-white');
                    } else {
                        row.classList.remove('bg-success', 'text-white');
                    }
                }
            });
        }

        function toggleExerciseCompletionRow(row) {
            const checkbox = row.querySelector('.exercise-checkbox');
            checkbox.checked = !checkbox.checked;
            toggleExerciseCompletion(checkbox);
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        window.onload = function () {
            // Extract the weight history from the model and convert it to JavaScript arrays
            var weightHistoryData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(@Model.weight_history));
            console.log(weightHistoryData);
            // Create the chart
            var ctx = document.getElementById('weightChart').getContext('2d');
            var labels = Array.from({ length: weightHistoryData.length }, (v, i) => i);
            var weightChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Weight History (lbs)',
                        data: weightHistoryData, // The weight data on the y-axis
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 2,
                        fill: false,
                    }]
                },
                options: {
                    scales: {
                        x: {
                            type: 'category',
                            ticks: {
                                display: false
                            },
                            title: {
                                display: false,
                                text: 'Date'
                            }
                        },
                        y: {
                            title: {
                                display: true,
                                text: 'Weight (lbs)'
                            }
                        }
                    }
                }
            });
        }
    </script>
}